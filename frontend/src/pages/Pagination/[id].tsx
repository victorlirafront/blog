import Head from 'next/head';
import { Fragment } from 'react';
import Header from '../../components/Header';
import MainPage from '../MainPage/index';
import Post from '@/components/Post';
import About from '@/components/About';
import Footer from '@/components/Footer';
import Axios from 'axios';
import Pagination from '@/components/Pagination';
import { GetStaticProps, GetStaticPaths } from 'next';

export default function Home({ data }: any) {

    const setNextPage = function(){
        if(data?.next){
           return data.next.page -1
        }else {
            return data.previous.page + 1
        }
    }

    const checkNextPage = function(){
        if(data?.next){
            return true
        }else {
            return false
        }
    }

    const checkPreviousPage = function(){
        if(data?.previous){
            return true
        }else {
            return false
        }
    }

    return (
        <Fragment>
            <Head>
                <title>My personal blog</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="https://ik.imagekit.io/Victorliradev/blog_pessoal/assets/js_QxOIctz2p.png?updatedAt=1688608526457" />
            </Head>
            <Header />
            <About/>
            <MainPage>
                <div className="container">
                    {data.results.map((post: any, index: any) => {
                        let costumizeFirstPost = false;

                        index === 0 ? costumizeFirstPost = true : false
                        
                        const styled = {
                            minWidth: "calc(66.66667% - 40px)"
                        }

                        return (
                            <Post
                                style={costumizeFirstPost ? styled : {}}
                                key={post.id}
                                id={post.id}
                                title={post.title}
                                content={post.content}
                                author={post.author}
                                // meta_tag_title={post.meta_tag_title}
                                // meta_tag_description={post.meta_tag_description}
                                post_image={post.post_image}
                                date={post.date}
                                category={post.category}
                            />
                        );
                    })}
                </div>
            </MainPage>
            <Pagination pageLength={data.totalPages} page={setNextPage()} hasNextPage={checkNextPage()} hasPreviousPage={checkPreviousPage()}/>
            <Footer/>
        </Fragment>
    );
}

export interface MyComponentProps {
    data: any;
}

export const getStaticProps: GetStaticProps = async (context: any) => {
    try {
        const { id } = context.params;
        const limit = "3"
        const category = "javascript"
        const response = await Axios.get(`http://localhost:3001/api/get?page=${id}&limit=${limit}&category=${category}`);
        const data = response.data; // Extract data from the response

        return {
            props: {
                data // Pass the extracted data as props
            },revalidate: 10, // In seconds
        };
    } catch (error) {
        console.error("Error fetching data:", error);
        return {
            props: {
                data: [] // Return an empty array or handle the error as needed
            }
        };
    }
};

export const getStaticPaths: GetStaticPaths = async () => {
    let response = await Axios({
        url: 'http://localhost:3001/api/get',
        method: 'GET',
    });
        
    return {
        fallback: true,
        paths: response.data.results.map((post: any) => ({
            params: { id: post.id.toString() },
        })),
    };
};